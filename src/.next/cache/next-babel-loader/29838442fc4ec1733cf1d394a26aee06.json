{"ast":null,"code":"var _jsxFileName = \"/Users/CReative59/Documents/Web Projects/habits-parrot/src/components/Dials.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { Box } from \"@chakra-ui/core\";\nimport { motion } from \"framer-motion\";\nimport { css } from \"@emotion/core\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst icon = {\n  hidden: {\n    opacity: 0,\n    pathLength: 0,\n    fill: \"transparent\"\n  },\n  visible: {\n    opacity: 1,\n    pathLength: 0.9,\n    fill: \"transparent\"\n  },\n  full: {\n    opacity: 0.1,\n    pathLength: 1,\n    fill: \"transparent\"\n  }\n};\nconst container = {\n  hidden: {\n    opacity: 0\n  },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.5\n    }\n  }\n};\n\nconst Dial = ({\n  r,\n  s,\n  color\n}) => {\n  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(motion.path, {\n    d: `\n            M 100, 100\n            m 0, ${-r}\n            a ${r},${r} 0 1,0 0,${r * 2}\n            a ${r},${r} 0 1,0 0,${-r * 2}\n        `,\n    strokeWidth: s,\n    strokeLinecap: \"round\",\n    stroke: color,\n    variants: icon,\n    initial: \"hidden\",\n    animate: \"full\",\n    transition: {\n      duration: \"5\",\n      type: \"spring\",\n      stiffness: 40\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), ___EmotionJSX(motion.path, {\n    d: `\n            M 100, 100\n            m 0, ${-r}\n            a ${r},${r} 0 1,0 0,${r * 2}\n            a ${r},${r} 0 1,0 0,${-r * 2}\n        `,\n    strokeWidth: s,\n    strokeLinecap: \"round\",\n    stroke: color,\n    variants: icon,\n    initial: \"hidden\",\n    animate: \"visible\",\n    transition: {\n      delay: 0.5,\n      default: {\n        duration: 5,\n        type: \"spring\",\n        stiffness: 40\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }));\n};\n\nconst Dials = props => {\n  const {\n    0: animate,\n    1: setAnimate\n  } = useState(\"visible\");\n  return ___EmotionJSX(Box, {\n    w: \"400px\",\n    h: \"400px\",\n    bg: \"gray.500\",\n    p: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, ___EmotionJSX(motion.svg, {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 200 200\",\n    variants: container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, ___EmotionJSX(Dial, {\n    r: 75,\n    s: 20,\n    color: \"red\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), ___EmotionJSX(Dial, {\n    r: 53,\n    s: 20,\n    color: \"#f2f2f2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), ___EmotionJSX(\"button\", {\n    onClick: () => setAnimate(\"half\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"test\"));\n};\n\nexport default Dials;","map":{"version":3,"sources":["/Users/CReative59/Documents/Web Projects/habits-parrot/src/components/Dials.js"],"names":["useState","Box","motion","css","icon","hidden","opacity","pathLength","fill","visible","full","container","show","transition","staggerChildren","Dial","r","s","color","duration","type","stiffness","delay","default","Dials","props","animate","setAnimate"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Box } from \"@chakra-ui/core\";\nimport { motion } from \"framer-motion\";\nimport { css } from \"@emotion/core\";\n\nconst icon = {\n  hidden: {\n    opacity: 0,\n    pathLength: 0,\n    fill: \"transparent\"\n  },\n  visible: {\n    opacity: 1,\n    pathLength: 0.9,\n    fill: \"transparent\"\n  },\n  full: {\n    opacity: 0.1,\n    pathLength: 1,\n    fill: \"transparent\"\n  }\n};\nconst container = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.5\n    }\n  }\n};\n\nconst Dial = ({ r, s, color }) => {\n  return (\n    <>\n      <motion.path\n        d={`\n            M 100, 100\n            m 0, ${-r}\n            a ${r},${r} 0 1,0 0,${r * 2}\n            a ${r},${r} 0 1,0 0,${-r * 2}\n        `}\n        strokeWidth={s}\n        strokeLinecap=\"round\"\n        stroke={color}\n        variants={icon}\n        initial=\"hidden\"\n        animate=\"full\"\n        transition={{\n          duration: \"5\",\n          type: \"spring\",\n          stiffness: 40\n        }}\n      />\n      <motion.path\n        d={`\n            M 100, 100\n            m 0, ${-r}\n            a ${r},${r} 0 1,0 0,${r * 2}\n            a ${r},${r} 0 1,0 0,${-r * 2}\n        `}\n        strokeWidth={s}\n        strokeLinecap=\"round\"\n        stroke={color}\n        variants={icon}\n        initial=\"hidden\"\n        animate=\"visible\"\n        transition={{\n          delay: 0.5,\n          default: {\n            duration: 5,\n            type: \"spring\",\n            stiffness: 40\n          }\n        }}\n      />\n    </>\n  );\n};\n\nconst Dials = props => {\n  const [animate, setAnimate] = useState(\"visible\");\n\n  return (\n    <Box w=\"400px\" h=\"400px\" bg=\"gray.500\" p=\"2\">\n      <motion.svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 200 200\"\n        variants={container}\n      >\n        {/* <circle cx=\"100\" cy=\"25\" r=\"11\" fill=\"white\"/> */}\n        <Dial r={75} s={20} color=\"red\" />\n        <Dial r={53} s={20} color=\"#f2f2f2\" />\n      </motion.svg>\n      <button onClick={() => setAnimate(\"half\")}>test</button>\n    </Box>\n  );\n};\n\nexport default Dials;\n"]},"metadata":{},"sourceType":"module"}