{"ast":null,"code":"var _jsxFileName = \"/Users/CReative59/Documents/Web Projects/habits-parrot/src/components/Dials.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { Box } from \"@chakra-ui/core\";\nimport { motion } from \"framer-motion\";\nimport { css } from \"@emotion/core\";\nimport { ThemeProvider } from \"@chakra-ui/core/\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\nconst container = {\n  hidden: {\n    opacity: 0\n  },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.5\n    }\n  }\n};\n\nconst Dial = ({\n  r,\n  s,\n  color,\n  value\n}) => {\n  const icon = {\n    hidden: {\n      opacity: 0,\n      pathLength: 0,\n      fill: \"transparent\"\n    },\n    back: {\n      opacity: 0,\n      pathLength: 1,\n      fill: \"transparent\"\n    },\n    show: {\n      opacity: 1,\n      pathLength: value,\n      fill: \"transparent\",\n      transition: {\n        type: \"tween\",\n        duration: 1.5,\n        ease: \"backInOut\"\n      }\n    },\n    full: {\n      opacity: 0.1,\n      pathLength: 1,\n      fill: \"transparent\"\n    }\n  };\n  return ___EmotionJSX(React.Fragment, null, ___EmotionJSX(motion.path, {\n    d: `\n            M 100, 100\n            m 0, ${-r}\n            a ${r},${r} 0 1,0 0,${r * 2}\n            a ${r},${r} 0 1,0 0,${-r * 2}\n        `,\n    strokeWidth: s,\n    strokeLinecap: \"round\",\n    stroke: color,\n    variants: icon,\n    initial: \"back\",\n    animate: \"full\",\n    transition: {\n      type: \"tween\",\n      duration: 0.4,\n      ease: \"easeIn\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), ___EmotionJSX(motion.path, {\n    d: `\n            M 100, 100\n            m 0, ${-r}\n            a ${r},${r} 0 1,0 0,${r * 2}\n            a ${r},${r} 0 1,0 0,${-r * 2}\n        `,\n    strokeWidth: s,\n    strokeLinecap: \"round\",\n    stroke: color,\n    variants: icon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }));\n};\n\nconst Dials = props => {\n  const {\n    0: animate,\n    1: setAnimate\n  } = useState(\"visible\");\n  return ___EmotionJSX(ThemeProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, ___EmotionJSX(Box, {\n    w: \"400px\",\n    h: \"400px\",\n    bg: \"gray.800\",\n    p: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, ___EmotionJSX(motion.svg, {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 200 200\",\n    variants: container,\n    initial: \"hidden\",\n    animate: \"show\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, ___EmotionJSX(Dial, {\n    r: 65,\n    s: 15,\n    color: \"#FC8181\",\n    value: 0.6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), ___EmotionJSX(Dial, {\n    r: 31,\n    s: 15,\n    color: \"#B794F4\",\n    value: 0.6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), ___EmotionJSX(\"button\", {\n    onClick: () => setAnimate(\"half\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"test\")));\n};\n\nexport default Dials;","map":{"version":3,"sources":["/Users/CReative59/Documents/Web Projects/habits-parrot/src/components/Dials.js"],"names":["useState","Box","motion","css","ThemeProvider","container","hidden","opacity","show","transition","staggerChildren","Dial","r","s","color","value","icon","pathLength","fill","back","type","duration","ease","full","Dials","props","animate","setAnimate"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Box } from \"@chakra-ui/core\";\nimport { motion } from \"framer-motion\";\nimport { css } from \"@emotion/core\";\nimport { ThemeProvider } from \"@chakra-ui/core/\";\n\nconst container = {\n  hidden: { opacity: 0 },\n  show: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.5\n    }\n  }\n};\n\nconst Dial = ({ r, s, color, value }) => {\n  const icon = {\n    hidden: {\n      opacity: 0,\n      pathLength: 0,\n      fill: \"transparent\"\n    },\n    back: {\n      opacity: 0,\n      pathLength: 1,\n      fill: \"transparent\"\n    },\n    show: {\n      opacity: 1,\n      pathLength: value,\n      fill: \"transparent\",\n      transition: { type: \"tween\", duration: 1.5, ease: \"backInOut\" }\n    },\n    full: {\n      opacity: 0.1,\n      pathLength: 1,\n      fill: \"transparent\"\n    }\n  };\n  return (\n    <>\n      <motion.path\n        d={`\n            M 100, 100\n            m 0, ${-r}\n            a ${r},${r} 0 1,0 0,${r * 2}\n            a ${r},${r} 0 1,0 0,${-r * 2}\n        `}\n        strokeWidth={s}\n        strokeLinecap=\"round\"\n        stroke={color}\n        variants={icon}\n        initial=\"back\"\n        animate=\"full\"\n        transition={{\n          type: \"tween\",\n          duration: 0.4,\n          ease: \"easeIn\"\n        }}\n      />\n      <motion.path\n        d={`\n            M 100, 100\n            m 0, ${-r}\n            a ${r},${r} 0 1,0 0,${r * 2}\n            a ${r},${r} 0 1,0 0,${-r * 2}\n        `}\n        strokeWidth={s}\n        strokeLinecap=\"round\"\n        stroke={color}\n        variants={icon}\n      />\n    </>\n  );\n};\n\nconst Dials = props => {\n  const [animate, setAnimate] = useState(\"visible\");\n\n  return (\n    <ThemeProvider>\n      <Box w=\"400px\" h=\"400px\" bg=\"gray.800\" p=\"2\">\n        <motion.svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 200 200\"\n          variants={container}\n          initial=\"hidden\"\n          animate=\"show\"\n        >\n          {/* <circle cx=\"100\" cy=\"25\" r=\"11\" fill=\"white\"/> */}\n          <Dial r={65} s={15} color=\"#FC8181\" value={0.6} />\n          <Dial r={31} s={15} color=\"#B794F4\" value={0.6} />\n        </motion.svg>\n        <button onClick={() => setAnimate(\"half\")}>test</button>\n      </Box>\n    </ThemeProvider>\n  );\n};\n\nexport default Dials;\n"]},"metadata":{},"sourceType":"module"}