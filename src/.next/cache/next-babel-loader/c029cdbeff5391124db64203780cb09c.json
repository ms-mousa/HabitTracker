{"ast":null,"code":"var _jsxFileName = \"/Users/CReative59/Documents/Web Projects/habits-parrot/src/components/Dials.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport { Box } from \"@chakra-ui/core\";\nimport { motion } from \"framer-motion\";\nimport { css } from \"@emotion/core\";\nimport { jsx as ___EmotionJSX } from \"@emotion/core\";\n\nconst Dial = ({\n  r,\n  s,\n  color\n}) => {\n  return ___EmotionJSX(motion.path, {\n    d: `\n            M 100, 100\n            m 0, ${-r / 2}\n            a ${r},${r} 0 1,0 0,${r * 2}\n            a ${r},${r} 0 1,0 0,${-r * 2}\n        `,\n    strokeWidth: s,\n    strokeLinecap: \"round\",\n    stroke: color,\n    variants: icon,\n    initial: \"hidden\",\n    animate: animate,\n    transition: {\n      duration: 1.2,\n      type: \"spring\",\n      stiffness: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  });\n};\n\nconst Dials = props => {\n  const {\n    0: animate,\n    1: setAnimate\n  } = useState(\"visible\");\n  const icon = {\n    hidden: {\n      opacity: 0,\n      pathLength: 0,\n      fill: \"transparent\"\n    },\n    visible: {\n      opacity: 1,\n      pathLength: 0.8,\n      fill: \"transparent\"\n    },\n    half: {\n      opacity: 0.5,\n      pathLength: 0.2,\n      fill: \"transparent\"\n    }\n  };\n  return ___EmotionJSX(Box, {\n    w: \"400px\",\n    h: \"400px\",\n    bg: \"gray.500\",\n    p: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, ___EmotionJSX(motion.svg, {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 200 200\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), ___EmotionJSX(\"button\", {\n    onClick: () => setAnimate(\"half\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"test\"));\n};\n\nexport default Dials;","map":{"version":3,"sources":["/Users/CReative59/Documents/Web Projects/habits-parrot/src/components/Dials.js"],"names":["useState","Box","motion","css","Dial","r","s","color","icon","animate","duration","type","stiffness","Dials","props","setAnimate","hidden","opacity","pathLength","fill","visible","half"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,SAASC,GAAT,QAAoB,eAApB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,CAAF;AAAKC,EAAAA,CAAL;AAAQC,EAAAA;AAAR,CAAD,KAAqB;AAChC,SACE,cAAC,MAAD,CAAQ,IAAR;AACE,IAAA,CAAC,EAAG;;mBAES,CAACF,CAAD,GAAK,CAAE;gBACVA,CAAE,IAAGA,CAAE,YAAWA,CAAC,GAAG,CAAE;gBACxBA,CAAE,IAAGA,CAAE,YAAW,CAACA,CAAD,GAAK,CAAE;SALrC;AAOE,IAAA,WAAW,EAAEC,CAPf;AAQE,IAAA,aAAa,EAAC,OARhB;AASE,IAAA,MAAM,EAAEC,KATV;AAUE,IAAA,QAAQ,EAAEC,IAVZ;AAWE,IAAA,OAAO,EAAC,QAXV;AAYE,IAAA,OAAO,EAAEC,OAZX;AAaE,IAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE,GADA;AAEVC,MAAAA,IAAI,EAAE,QAFI;AAGVC,MAAAA,SAAS,EAAE;AAHD,KAbd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAqBD,CAtBD;;AAwBA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,QAAM;AAAA,OAACL,OAAD;AAAA,OAAUM;AAAV,MAAwBf,QAAQ,CAAC,SAAD,CAAtC;AAEA,QAAMQ,IAAI,GAAG;AACXQ,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE,CADH;AAENC,MAAAA,UAAU,EAAE,CAFN;AAGNC,MAAAA,IAAI,EAAE;AAHA,KADG;AAMXC,IAAAA,OAAO,EAAE;AACPH,MAAAA,OAAO,EAAE,CADF;AAEPC,MAAAA,UAAU,EAAE,GAFL;AAGPC,MAAAA,IAAI,EAAE;AAHC,KANE;AAWXE,IAAAA,IAAI,EAAE;AACJJ,MAAAA,OAAO,EAAE,GADL;AAEJC,MAAAA,UAAU,EAAE,GAFR;AAGJC,MAAAA,IAAI,EAAE;AAHF;AAXK,GAAb;AAkBA,SACE,cAAC,GAAD;AAAK,IAAA,CAAC,EAAC,OAAP;AAAe,IAAA,CAAC,EAAC,OAAjB;AAAyB,IAAA,EAAE,EAAC,UAA5B;AAAuC,IAAA,CAAC,EAAC,GAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,cAAC,MAAD,CAAQ,GAAR;AACE,IAAA,KAAK,EAAC,4BADR;AAEE,IAAA,OAAO,EAAC,aAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE;AAAQ,IAAA,OAAO,EAAE,MAAMJ,UAAU,CAAC,MAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,CADF;AASD,CA9BD;;AAgCA,eAAeF,KAAf","sourcesContent":["import { useState } from \"react\";\nimport { Box } from \"@chakra-ui/core\";\nimport { motion } from \"framer-motion\";\nimport { css } from \"@emotion/core\";\n\nconst Dial = ({ r, s, color }) => {\n  return (\n    <motion.path\n      d={`\n            M 100, 100\n            m 0, ${-r / 2}\n            a ${r},${r} 0 1,0 0,${r * 2}\n            a ${r},${r} 0 1,0 0,${-r * 2}\n        `}\n      strokeWidth={s}\n      strokeLinecap=\"round\"\n      stroke={color}\n      variants={icon}\n      initial=\"hidden\"\n      animate={animate}\n      transition={{\n        duration: 1.2,\n        type: \"spring\",\n        stiffness: 50\n      }}\n    />\n  );\n};\n\nconst Dials = props => {\n  const [animate, setAnimate] = useState(\"visible\");\n\n  const icon = {\n    hidden: {\n      opacity: 0,\n      pathLength: 0,\n      fill: \"transparent\"\n    },\n    visible: {\n      opacity: 1,\n      pathLength: 0.8,\n      fill: \"transparent\"\n    },\n    half: {\n      opacity: 0.5,\n      pathLength: 0.2,\n      fill: \"transparent\"\n    }\n  };\n\n  return (\n    <Box w=\"400px\" h=\"400px\" bg=\"gray.500\" p=\"2\">\n      <motion.svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 200 200\"\n      ></motion.svg>\n      <button onClick={() => setAnimate(\"half\")}>test</button>\n    </Box>\n  );\n};\n\nexport default Dials;\n"]},"metadata":{},"sourceType":"module"}